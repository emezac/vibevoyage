<%# app/views/app/index.html.erb - VERSI√ìN LIMPIA SIN MAPAS %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('vibe-form');
  const submitBtn = document.getElementById('submit-btn');
  const heroSection = document.getElementById('hero-section');
  const processingSection = document.getElementById('processing-section');
  const narrativeSection = document.getElementById('narrative-section');
  const timelineSection = document.getElementById('timeline-section');
  const summarySection = document.getElementById('summary-section');
  
  let currentProcessId = null;
  let statusInterval = null;

  form.addEventListener('submit', function(e) {
    e.preventDefault();
    const formData = new FormData(form);
    
    submitBtn.disabled = true;
    submitBtn.innerHTML = `<div class="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></div> Curating...`;
    
    transitionToSection(processingSection);
    
    // Llamada al controller
    fetch('<%= app_create_real_journey_path %>', {
      method: 'POST',
      body: formData,
      headers: {
        'X-Requested-With': 'XMLHttpRequest',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      }
    })
    .then(response => response.json())
    .then(data => {
      console.log('Response:', data);
      if (data.success && data.process_id) {
        currentProcessId = data.process_id;
        startStatusPolling();
      } else {
        showError(data.message || 'Error procesando tu vibe');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showError('Error de conexi√≥n');
    });
  });

  function transitionToSection(targetSection) {
    console.log('üîÑ Transitioning to:', targetSection.id);
    
    const visibleSection = document.querySelector('.section-visible');
    if (visibleSection) {
      visibleSection.classList.remove('section-visible');
      visibleSection.classList.add('section-hidden');
    }

    setTimeout(() => {
      targetSection.classList.remove('section-hidden');
      targetSection.classList.add('section-visible');
      targetSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }, 400);
  }

  function startStatusPolling() {
    if (!currentProcessId) return;
    
    statusInterval = setInterval(() => {
      fetch(`<%= app_real_status_path('PROCESS_ID') %>`.replace('PROCESS_ID', currentProcessId))
        .then(response => response.json())
        .then(data => {
          console.log('Full status response:', JSON.stringify(data, null, 2));
          updateProcessingStatus(data);
          
          if (data.status === 'complete' && data.itinerary) {
            console.log('Status complete detected!');
            console.log('Itinerary data:', JSON.stringify(data.itinerary, null, 2));
            
            clearInterval(statusInterval);
            statusInterval = null;
            
            // Peque√±o delay para mostrar completado antes de cambiar
            setTimeout(() => {
              showItineraryResults(data.itinerary);
            }, 1000);
            
          } else if (data.status === 'failed' || data.status === 'error') {
            console.log('Status failed detected:', data);
            clearInterval(statusInterval);
            statusInterval = null;
            showError(data.message || 'Error procesando tu vibe');
          } else {
            console.log('Status still processing:', data.status, data.progress + '%');
          }
        })
        .catch(error => {
          console.error('Status error:', error);
          clearInterval(statusInterval);
          showError('Error obteniendo estado');
        });
    }, 2000);
  }

  function updateProcessingStatus(data) {
    console.log('Processing status update:', data);
    
    const progressBar = document.getElementById('progress-bar');
    const progressPercent = document.getElementById('progress-percent');
    const processingLogs = document.getElementById('processing-logs');
    
    progressBar.style.width = `${data.progress || 0}%`;
    progressPercent.textContent = `${data.progress || 0}%`;
    
    // Simular los logs de Qloo API como en la imagen
    const simulatedLogs = [
      { progress: 10, message: 'Analizando tu vibe cultural...', color: 'text-blue-400' },
      { progress: 25, message: 'Processing: "comida local" ‚Üí Restaurant recommendations', color: 'text-green-400' },
      { progress: 45, message: 'Cultural analysis via Qloo API...', color: 'text-yellow-400' },
      { progress: 65, message: 'Mapping affinities: cerveza artesanal + local spots', color: 'text-cyan-400' },
      { progress: 85, message: 'Generating personalized narrative...', color: 'text-orange-400' },
      { progress: 100, message: '¬°Tu aventura est√° lista!', color: 'text-green-400' }
    ];
    
    // Encontrar el log apropiado basado en el progreso
    const currentLog = simulatedLogs.find(log => log.progress <= (data.progress || 0)) || simulatedLogs[0];
    
    const logEntry = document.createElement('div');
    const statusColor = (data.status === 'complete') ? 'text-green-400' : currentLog.color;
    const icon = (data.status === 'complete') ? 
      `<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path></svg>` :
      `<div class="w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin"></div>`;

    logEntry.className = `flex items-center gap-3 ${statusColor} mb-2`;
    logEntry.innerHTML = `${icon} ${data.message || currentLog.message}`;
    
    // Mantener historial de logs en lugar de reemplazar
    if (processingLogs.children.length === 0 || data.progress > parseInt(progressPercent.textContent)) {
      processingLogs.appendChild(logEntry);
    }
    
    // Scroll al √∫ltimo log
    processingLogs.scrollTop = processingLogs.scrollHeight;
  }

  function showItineraryResults(itinerary) {
    console.log('Showing itinerary:', itinerary);
    
    // Manejar tanto estructura anidada como plana
    const experiences = itinerary.experiences || [];
    const title = itinerary.title || 'Tu Aventura';
    const city = itinerary.city || 'Cultural';
    const narrativeHtml = itinerary.narrative_html;
    
    console.log('Experiences found:', experiences.length);
    console.log('Narrative HTML:', narrativeHtml ? 'Present' : 'Not present');
    
    // Mostrar narrative primero si existe
    if (narrativeHtml) {
      const narrativeContent = document.getElementById('narrative-content');
      narrativeContent.innerHTML = narrativeHtml;
      transitionToSection(document.getElementById('narrative-section'));
      
      // Despu√©s de 3 segundos, mostrar el timeline
      setTimeout(() => {
        showTimelineAfterNarrative(title, city, experiences);
      }, 3000);
    } else {
      // Si no hay narrative, ir directo al timeline
      showTimelineAfterNarrative(title, city, experiences);
    }
  }

  function showTimelineAfterNarrative(title, city, experiences) {
    console.log('üéØ Showing timeline:', { title, city, experiencesCount: experiences.length });
    
    const timelineTitle = document.getElementById('timeline-title');
    const timelineContent = document.getElementById('timeline-content');
    
    timelineTitle.innerHTML = `${title} <span class="gradient-text">${city}</span>`;
    
    if (experiences.length > 0) {
      const generatedHTML = generateTimelineHTML(experiences);
      console.log('üéØ Generated HTML length:', generatedHTML.length);
      console.log('üéØ First 300 chars:', generatedHTML.substring(0, 300));
      
      timelineContent.innerHTML = generatedHTML;
      console.log('üéØ Timeline content set successfully');
            
    } else {
      timelineContent.innerHTML = '<div class="text-center text-slate-400 py-20">No se encontraron experiencias.</div>';
    }
    
    transitionToSection(document.getElementById('timeline-section'));
    
    setTimeout(() => {
      document.getElementById('summary-section').classList.remove('section-hidden');
      document.getElementById('summary-section').classList.add('section-visible');
    }, 2000);
  }

  function generateTimelineHTML(experiences) {
    console.log('üèóÔ∏è Generating timeline for', experiences.length, 'experiences');
    
    if (!experiences || experiences.length === 0) {
      return '<div class="text-center text-slate-400 py-20">No se encontraron experiencias</div>';
    }

    const experiencesHTML = experiences.map((exp, index) => {
      const isEven = index % 2 === 0;
      const colors = ['terracotta', 'sage', 'gold'];
      const emojis = ['‚òÄÔ∏è', 'üìñ', 'üç∑'];
      
      // Extraer datos con fallbacks
      const time = exp.time || `${9 + index * 3}:00 ${index < 2 ? 'AM' : 'PM'}`;
      const title = exp.title || 'Experiencia Cultural';
      const description = exp.description || 'Una experiencia √∫nica curada especialmente para ti';
      const location = exp.location || exp.title || 'Ubicaci√≥n Especial';
      const area = exp.area || 'Centro';
      const duration = exp.duration || '1-2 horas';
      //
      const cultural_explanation = exp.cultural_explanation || exp.why_chosen || 'Curada espec√≠ficamente para tu vibe cultural √∫nico.';
      const vibe_match = exp.vibe_match || 95;
      const rating = exp.rating || '4.5';
      const image = exp.image || 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400';
      const latitude = exp.latitude;
      const longitude = exp.longitude;
      const mapsUrl = latitude && longitude ? `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}` : '#';
      const priceLevel = exp.price_level ? '$'.repeat(exp.price_level) : '';
      const keywords = exp.qloo_keywords || [];
      const website = exp.website;
      const phone = exp.phone;
      // 
      const openStatus = exp.hours ? '<div class="flex items-center gap-1"><div class="w-2 h-2 rounded-full bg-green-400"></div>Open Now</div>' : '';
            
      return `
        <div class="timeline-item fade-in-up lg:grid lg:grid-cols-2 lg:gap-16 items-center mb-16" style="animation-delay: ${index * 0.5}s;">
          <div class="${isEven ? 'text-left' : 'lg:order-1 text-left lg:text-right'}">
            <div class="flex items-center gap-4 mb-6 ${isEven ? '' : 'lg:justify-end'}">
              <div class="${isEven ? '' : 'lg:order-2'}">
                <p class="text-sm font-medium text-slate-400 uppercase tracking-wide">${time}</p>
                <h3 class="text-3xl md:text-4xl font-bold text-white">${title}</h3>
              </div>
              <div class="w-16 h-16 rounded-2xl flex items-center justify-center ${isEven ? '' : 'lg:order-1'}" style="background: linear-gradient(135deg, var(--accent-${colors[index % 3]}), var(--accent-${colors[(index + 1) % 3]}));">
                <span class="text-3xl">${emojis[index % 3]}</span>
              </div>
            </div>
            <p class="text-lg md:text-xl text-slate-400 leading-relaxed mb-6">${description.substring(0, 200)}${description.length > 200 ? '...' : ''}</p>
            <div class="flex items-center gap-4 text-sm ${isEven ? '' : 'lg:justify-end'}">
              <div class="flex items-center gap-2 text-slate-300">
                <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                ${duration}
              </div>
              <div class="flex items-center gap-2 text-slate-300">
                  <a href="${latitude && longitude ? `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}` : '# FALSE'}" target="_blank" rel="noopener noreferrer" class="flex items-center gap-2 text-slate-300 hover:text-white transition-colors duration-300">
                    <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    </svg>
                    ${area}
                  </a>
              </div>
            </div>
          </div>
          
          <div class="mt-12 lg:mt-0 ${isEven ? '' : 'lg:order-2'}">
            <div class="glass-card p-6 hover:scale-[1.02] transition-all duration-500">
              <img src="${image}" alt="${location}" class="w-full h-56 object-cover" onerror="this.src='https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400'">
              <div class="absolute top-4 right-4">
                <div class="glass-card px-3 py-1 text-xs font-semibold border-0">
                  ${openStatus}
                </div>
              </div>
              <div class="flex items-start justify-between mb-4">
                <h4 class="text-2xl font-bold text-white">${location}</h4>
                
                <!-- PRICING -->
                ${priceLevel ? `<div class="text-lg font-bold text-slate-400">${priceLevel}</div>` : ''}
              </div>
              <div class="flex items-start justify-between mb-4">
                <h4 class="text-2xl font-bold text-white">${location}</h4>
                <button class="p-2 rounded-full hover:bg-white/10 transition-colors">
                  <svg class="w-5 h-5 text-slate-400 hover:text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </button>
              </div>

              <div class="glass-card bg-black/30 p-4 rounded-xl mb-6 border-0">
                <div class="flex items-center gap-2 mb-2">
                  <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="color: var(--accent-${colors[index % 3]});">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                  <p class="font-semibold text-sm" style="color: var(--accent-sand);">CULTURAL CONNECTION:</p>
                </div>

                <p class="text-slate-300 text-sm leading-relaxed">
                  ${cultural_explanation.substring(0, 300)}${cultural_explanation.length > 300 ? '...' : ''}
                </p>
                ${keywords.length > 0 ? `
                  <div class="mt-3 pt-3 border-t border-white/10">
                    <p class="text-xs text-slate-500 mb-2">Cultural Keywords:</p>
                    <div class="flex flex-wrap gap-2">
                      ${keywords.slice(0, 5).map(keyword => 
                        `<span class="px-2 py-1 bg-white/10 rounded-lg text-xs text-slate-300 font-medium">${keyword}</span>`
                      ).join('')}
                    </div>
                  </div>
                ` : ''}
              </div>

              <div class="flex items-center justify-between mb-4">
                <div class="text-xs text-slate-400">Vibe Match: ${vibe_match}%</div>
                <div class="flex items-center gap-1">
                  <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                  </svg>
                  <span class="text-xs text-slate-400">${rating}</span>
                </div>
              </div>
              
              <div class="w-full bg-white/10 rounded-full h-2 mb-4">
                <div class="vibe-match-bar" style="width: ${vibe_match}%;"></div>
              </div>
                <div class="flex gap-2 mt-6">
                ${website ? `<a href="${website}" target="_blank" class="flex-1 glass-card px-4 py-3 rounded-xl font-semibold text-sm border-0 hover:bg-white/10 transition-colors flex items-center justify-center gap-2">
                  <svg class="w-4 h-4" ...>...</svg> Website
                </a>` : ''}
                ${phone ? `<a href="tel:${phone}" class="glass-card px-4 py-3 rounded-xl font-semibold text-sm border-0 hover:bg-white/10 transition-colors flex items-center justify-center">
                  <svg class="w-4 h-4" ...>...</svg>
                </a>` : ''}
              </div>
              <div class="flex gap-2">
                <button class="flex-1 glass-card px-4 py-3 rounded-xl font-semibold text-sm border-0 hover:bg-white/10 transition-colors flex items-center justify-center gap-2">
                  <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  Detalles
                </button>
                <button class="glass-card px-4 py-3 rounded-xl font-semibold text-sm border-0 hover:bg-white/10 transition-colors flex items-center justify-center">
                  <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>`;
    }).join('');

    return `
      <!-- Timeline SVG Line -->
      <div class="absolute top-0 left-1/2 -translate-x-1/2 h-full w-full max-w-xs hidden lg:block" style="pointer-events: none;">
        <svg width="100%" height="100%" viewBox="0 0 200 1400" preserveAspectRatio="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M 100,0 C 200,250 0,500 100,750 C 200,1000 0,1250 100,1400" stroke="url(#timeline-gradient)" stroke-width="3" fill="none" class="timeline-path"/>
          <defs>
            <linearGradient id="timeline-gradient" x1="0%" y1="0%" x2="0%" y2="100%">
              <stop offset="0%" style="stop-color: var(--accent-terracotta); stop-opacity: 0.8" />
              <stop offset="50%" style="stop-color: var(--accent-sage); stop-opacity: 0.8" />
              <stop offset="100%" style="stop-color: var(--accent-sand); stop-opacity: 0.8" />
            </linearGradient>
          </defs>
        </svg>
      </div>
      
      <!-- Timeline Content -->
      <div class="relative z-10 space-y-32">${experiencesHTML}</div>`;
  }

  function showError(message) {
    const errorHTML = `
      <div class="text-center">
        <div class="w-20 h-20 mx-auto mb-6 rounded-full flex items-center justify-center bg-red-500">
          <svg class="w-10 h-10 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
          </svg>
        </div>
        <h3 class="text-3xl font-bold text-white mb-4">üòï Algo sali√≥ mal</h3>
        <p class="text-xl text-slate-400 mb-8">${message}</p>
        <button onclick="startNewJourney()" class="font-bold py-4 px-8 rounded-xl transition-all duration-300 text-lg" style="background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage)); color: white;">
          Intentar de nuevo
        </button>
      </div>
    `;
    
    processingSection.querySelector('.relative.z-10').innerHTML = errorHTML;
  }

  function resetForm() {
    submitBtn.disabled = false;
    submitBtn.innerHTML = `
      <svg class="w-5 h-5 group-hover:rotate-12 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.781 0-2.674-2.153-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z" />
      </svg>
      Curate my Adventure
      <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform duration-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
      </svg>
    `;
    if (statusInterval) {
      clearInterval(statusInterval);
      statusInterval = null;
    }
    currentProcessId = null;
  }

  window.startNewJourney = function() {
    transitionToSection(heroSection);
    form.reset();
    resetForm();
    
    // Reset progress indicators
    document.getElementById('progress-bar').style.width = '0%';
    document.getElementById('progress-percent').textContent = '0%';
    document.getElementById('processing-logs').innerHTML = '';
    
    // Reset sections
    narrativeSection.classList.add('section-hidden');
    narrativeSection.classList.remove('section-visible');
    timelineSection.classList.add('section-hidden');
    timelineSection.classList.remove('section-visible');
    summarySection.classList.add('section-hidden');
    summarySection.classList.remove('section-visible');
  };
});
</script>

<%# CSS Styles %>
<style>
  :root {
    --accent-terracotta: #e07a5f;
    --accent-sage: #81b29a;
    --accent-sand: #f3e5d8;
    --accent-gold: #f2cc8f;
  }
  
  .gradient-text {
    background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .glass-card {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .vibe-match-bar {
    background: linear-gradient(90deg, var(--accent-terracotta), var(--accent-sage));
    height: 100%;
    border-radius: 9999px;
    transition: width 0.5s ease;
  }
  
  .section-visible { opacity: 1; transform: translateY(0); }
  .section-hidden { opacity: 0; transform: translateY(50px); }
  .section-transition { transition: all 0.8s ease; }
  
  .fade-in-up { animation: fadeInUp 1s ease forwards; }
  
  @keyframes fadeInUp {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  body { 
    background: linear-gradient(135deg, #1a1d2e 0%, #16213e 100%);
    min-height: 100vh;
  }
</style>

<%# Header %>
<header class="sticky top-0 z-50 backdrop-blur-sm">
  <div class="glass-card mx-4 md:mx-auto md:max-w-7xl mt-4">
    <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
      <%= link_to "/", class: "flex items-center gap-3" do %>
        <div class="w-10 h-10 rounded-xl flex items-center justify-center" style="background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage));">
          <svg class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064" />
          </svg>
        </div>
        <h1 class="text-3xl font-bold gradient-text">VibeVoyage</h1>
      <% end %>
      <div class="text-sm text-slate-400">Clean Mode</div>
    </nav>
  </div>
</header>

<main class="relative">
  <%# Hero Section %>
  <section class="min-h-screen flex items-center justify-center section-transition section-visible" id="hero-section">
    <div class="container mx-auto px-4 pt-20 pb-20">
      <div class="text-center max-w-6xl mx-auto">
        <div class="mb-8">
          <div class="inline-flex items-center gap-2 glass-card px-6 py-3 text-sm font-medium text-slate-300 mb-8 fade-in-up">
            <div class="w-2 h-2 rounded-full bg-green-400 animate-pulse"></div>
            AI-Powered Cultural Curation
          </div>
        </div>
        
        <h1 class="text-5xl md:text-7xl lg:text-8xl font-bold tracking-tight mb-8 leading-none fade-in-up text-white" style="animation-delay: 0.2s;">
          Turn your tastes into a 
          <span class="gradient-text block">story worth living</span>
        </h1>
        
        <p class="text-xl md:text-2xl text-slate-400 font-light leading-relaxed max-w-4xl mx-auto mb-16 fade-in-up" style="animation-delay: 0.4s;">
          Describe your perfect day. Our AI agent will design a unique narrative journey using Qloo's cultural intelligence.
        </p>
        
        <%# Form %>
        <%= form_with url: app_create_real_journey_path, local: false, id: 'vibe-form', class: "glass-card p-8 max-w-3xl mx-auto relative fade-in-up", style: "animation-delay: 0.6s;" do |form| %>
          <div class="absolute -top-6 left-1/2 transform -translate-x-1/2">
            <div class="w-12 h-12 rounded-full flex items-center justify-center" style="background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage));">
              <svg class="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-1l-4 4z" />
              </svg>
            </div>
          </div>

          <%= form.label :user_vibe, class: "text-left block text-lg font-semibold text-slate-200 mb-4 flex items-center gap-2" do %>
            <span class="text-2xl">üé≠</span>
            Describe your perfect vibe:
          <% end %>
          
          <div class="relative">
            <%= form.text_area :user_vibe, rows: 4, required: true,
                class: "w-full p-6 text-lg bg-black/30 border-2 border-white/10 focus:border-yellow-500 focus:ring-0 resize-none rounded-2xl text-white placeholder-slate-400 transition-all duration-300",
                placeholder: "Ex: A peaceful day in Madrid, with a touch of classic cinema, good reading, and authentic tapas..." %>
            <div class="absolute bottom-4 right-4 text-xs text-slate-500">
              <span class="flex items-center gap-1">
                <svg class="w-3 h-3" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                </svg>
                Qloo Enhanced
              </span>
            </div>
          </div>
          
          <%= form.submit "Curate my Adventure", id: "submit-btn",
              class: "mt-6 w-full font-bold py-5 px-8 rounded-2xl transition-all duration-300 text-lg transform hover:scale-[1.02] hover:shadow-2xl flex items-center justify-center gap-3 group text-white",
              style: "background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage));" %>
        <% end %>
      </div>
    </div>
  </section>

  <%# Processing Section %>
  <section class="py-20 px-4 section-transition section-hidden" id="processing-section">
    <div class="max-w-4xl mx-auto">
      <div class="glass-card p-8 text-center relative overflow-hidden">
        <div class="relative z-10">
          <div class="flex justify-center items-center mb-8">
            <div class="w-20 h-20 rounded-full flex items-center justify-center" style="background: radial-gradient(circle, var(--accent-terracotta), rgba(224, 122, 95, 0.3));">
              <svg class="w-10 h-10 text-white animate-spin" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09z"/>
              </svg>
            </div>
          </div>
          
          <h3 class="text-3xl md:text-4xl font-bold text-white mb-4">Analyzing your cultural essence...</h3>
          <p class="text-slate-300 text-lg md:text-xl mb-8">Connecting your passions with Qloo's cultural intelligence.</p>
          
          <div class="glass-card bg-black/40 p-6 rounded-2xl font-mono text-sm text-left space-y-3 border-0" id="processing-logs">
            <!-- Logs will be added dynamically -->
          </div>
          
          <div class="mt-8">
            <div class="flex justify-between text-sm text-slate-400 mb-2">
              <span>Cultural Analysis Progress</span>
              <span id="progress-percent">0%</span>
            </div>
            <div class="w-full bg-white/10 rounded-full h-2">
              <div class="vibe-match-bar transition-all duration-500" id="progress-bar" style="width: 0%;"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <%# Agregar secci√≥n para mostrar narrative HTML si existe %>
  <%# Narrative Section (Nueva) %>
  <section class="py-20 px-4 section-transition section-hidden" id="narrative-section">
    <div class="max-w-6xl mx-auto">
      <div class="text-center mb-12">
        <h2 class="text-4xl md:text-5xl font-bold mb-6 text-white">Tu Curation Journey</h2>
        <p class="text-xl text-slate-400 max-w-3xl mx-auto">
          Descubre c√≥mo la IA de Qloo transform√≥ tu vibe en experiencias aut√©nticas.
        </p>
      </div>
      <div id="narrative-content" class="glass-card p-8"></div>
    </div>
  </section>

  <%# Timeline Section %>
  <section class="py-20 px-4 section-transition section-hidden" id="timeline-section">
    <div class="max-w-6xl mx-auto">
      <div class="text-center mb-20">
        <div class="inline-flex items-center gap-2 glass-card px-6 py-3 text-sm font-medium text-slate-300 mb-8">
          <div class="w-2 h-2 rounded-full animate-pulse" style="background-color: var(--accent-terracotta);"></div>
          Your Personalized Journey
        </div>
        <h2 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-white" id="timeline-title">
          Your Adventure in <span class="gradient-text">the World</span>
        </h2>
        <p class="text-xl text-slate-400 max-w-3xl mx-auto">
          Each experience carefully curated to match your cultural essence and create a meaningful narrative.
        </p>
      </div>
      <div class="relative" id="timeline-content"></div>
    </div>
  </section>

  <%# Summary Section %>
  <section class="py-20 px-4 section-transition section-hidden" id="summary-section">
    <div class="max-w-4xl mx-auto text-center">
      <div class="glass-card p-10">
        <h3 class="text-4xl md:text-5xl font-bold mb-6 text-white">Your cultural story awaits</h3>
        <p class="text-xl text-slate-400 mb-12 max-w-2xl mx-auto">Each experience has been carefully curated to resonate with your unique cultural essence.</p>
        <div class="flex flex-wrap justify-center gap-6">
          <button class="font-bold py-4 px-8 rounded-xl transition-all duration-300 text-lg transform hover:scale-105 text-white" style="background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage));">üíæ Save Itinerary</button>
          <button class="glass-card px-8 py-4 rounded-xl font-semibold text-white hover:bg-white/20 transition-all duration-300 text-lg border-0">üîó Share Adventure</button>
          <button class="glass-card px-8 py-4 rounded-xl font-semibold text-white hover:bg-white/20 transition-all duration-300 text-lg border-0" onclick="startNewJourney()">üé≠ Create Another</button>
        </div>
      </div>
    </div>
  </section>
</main>