<!-- app/views/itineraries/_processing_state_with_polling.html.erb -->
<section class="py-20 px-4 min-h-screen flex items-center justify-center" id="processing-section" data-process-id="<%= process_id %>">
  <div class="max-w-4xl mx-auto">
    <div class="glass-card glass-strong p-8 text-center relative overflow-hidden">
      <!-- Animated Background -->
      <div class="absolute inset-0 opacity-10">
        <div class="w-full h-full" style="background: linear-gradient(45deg, var(--accent-terracotta), transparent, var(--accent-sage), transparent); animation: gradient-shift 3s ease-in-out infinite;"></div>
      </div>
      
      <div class="relative z-10">
        <div class="flex justify-center items-center mb-8">
          <div class="relative">
            <div class="w-20 h-20 rounded-full flex items-center justify-center thinking-animation status-indicator" style="background: radial-gradient(circle, var(--accent-terracotta), rgba(224, 122, 95, 0.3));">
              <svg class="w-10 h-10 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09zM18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456zM16.894 20.567L16.5 21.75l-.394-1.183a2.25 2.25 0 00-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 001.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 001.423 1.423l1.183.394-1.183.394a2.25 2.25 0 00-1.423 1.423z"/>
              </svg>
            </div>
            <div class="absolute -inset-2 rounded-full opacity-30 animate-ping" style="background: radial-gradient(circle, var(--accent-terracotta), transparent);"></div>
          </div>
        </div>
        
        <h3 class="text-3xl md:text-4xl font-display font-bold text-white mb-4" id="processing-title">
          Conectando con APIs culturales...
        </h3>
        <p class="text-slate-300 text-lg md:text-xl mb-8" id="processing-subtitle">
          Obteniendo recomendaciones reales de Qloo y Google Places.
        </p>
        
        <!-- Enhanced Processing Status -->
        <div class="glass-card bg-black/40 p-6 rounded-2xl font-mono text-sm text-left space-y-3 border-0" id="processing-logs">
          <div class="flex items-center gap-3 text-green-400">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            Vibe recibido: "<%= user_vibe %>"
          </div>
          <div class="flex items-center gap-3 text-yellow-400" id="current-step">
            <div class="w-4 h-4 border-2 border-yellow-400 border-t-transparent rounded-full animate-spin"></div>
            Iniciando procesamiento...
          </div>
        </div>
        
        <!-- Progress Bar -->
        <div class="mt-8">
          <div class="flex justify-between text-sm text-slate-400 mb-2">
            <span>Progreso de APIs Culturales</span>
            <span id="progress-percent">5%</span>
          </div>
          <div class="w-full bg-white/10 rounded-full h-2">
            <div class="vibe-match-bar transition-all duration-500" id="progress-bar" style="width: 5%;"></div>
          </div>
        </div>

        <!-- API Status Indicators -->
        <div class="mt-8 grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="glass-card bg-black/30 p-4 rounded-xl border-0">
            <div class="flex items-center gap-2 mb-2">
              <div class="w-3 h-3 bg-yellow-400 rounded-full animate-pulse" id="qloo-indicator"></div>
              <span class="text-sm font-semibold">Qloo Cultural API</span>
            </div>
            <div class="text-xs text-slate-400" id="qloo-status">Preparando consulta...</div>
          </div>
          <div class="glass-card bg-black/30 p-4 rounded-xl border-0">
            <div class="flex items-center gap-2 mb-2">
              <div class="w-3 h-3 bg-gray-400 rounded-full" id="places-indicator"></div>
              <span class="text-sm font-semibold">Google Places API</span>
            </div>
            <div class="text-xs text-slate-400" id="places-status">En espera...</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const processId = document.getElementById('processing-section').dataset.processId;
  let pollInterval;
  
  function pollStatus() {
    fetch(`/itineraries/status/${processId}`)
      .then(response => response.json())
      .then(data => {
        updateUI(data);
        
        if (data.status === 'complete') {
          clearInterval(pollInterval);
          showFinalResult(data.itinerary);
        } else if (data.status === 'failed') {
          clearInterval(pollInterval);
          showError(data.message);
        }
      })
      .catch(error => {
        console.error('Polling error:', error);
        // Continuar polling en caso de error de red temporal
      });
  }
  
  function updateUI(data) {
    // Actualizar progress bar
    const progressBar = document.getElementById('progress-bar');
    const progressPercent = document.getElementById('progress-percent');
    const currentStep = document.getElementById('current-step');
    
    if (progressBar) progressBar.style.width = `${data.progress}%`;
    if (progressPercent) progressPercent.textContent = `${data.progress}%`;
    
    // Actualizar mensaje actual
    if (currentStep && data.message) {
      const icon = data.progress >= 100 ? 
        `<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path></svg>` :
        `<div class="w-4 h-4 border-2 border-yellow-400 border-t-transparent rounded-full animate-spin"></div>`;
      
      currentStep.innerHTML = `${icon} ${data.message}`;
      currentStep.className = `flex items-center gap-3 ${data.progress >= 100 ? 'text-green-400' : 'text-yellow-400'}`;
    }
    
    // Actualizar indicadores de API basado en el progreso
    updateAPIIndicators(data.progress);
  }
  
  function updateAPIIndicators(progress) {
    const qlooIndicator = document.getElementById('qloo-indicator');
    const qlooStatus = document.getElementById('qloo-status');
    const placesIndicator = document.getElementById('places-indicator');
    const placesStatus = document.getElementById('places-status');
    
    // Qloo API (se activa en progreso 35%)
    if (progress >= 35) {
      if (qlooIndicator) {
        qlooIndicator.className = 'w-3 h-3 bg-green-400 rounded-full';
      }
      if (qlooStatus) {
        qlooStatus.textContent = 'Recomendaciones obtenidas ‚úì';
      }
    } else if (progress >= 25) {
      if (qlooIndicator) {
        qlooIndicator.className = 'w-3 h-3 bg-yellow-400 rounded-full animate-pulse';
      }
      if (qlooStatus) {
        qlooStatus.textContent = 'Consultando API...';
      }
    }
    
    // Google Places API (se activa en progreso 55%)
    if (progress >= 55) {
      if (placesIndicator) {
        placesIndicator.className = 'w-3 h-3 bg-green-400 rounded-full';
      }
      if (placesStatus) {
        placesStatus.textContent = 'Lugares encontrados ‚úì';
      }
    } else if (progress >= 45) {
      if (placesIndicator) {
        placesIndicator.className = 'w-3 h-3 bg-yellow-400 rounded-full animate-pulse';
      }
      if (placesStatus) {
        placesStatus.textContent = 'Buscando lugares...';
      }
    }
  }
  
  function showFinalResult(itinerary) {
    // Reemplazar toda la secci√≥n con el resultado final
    document.getElementById('processing-section').outerHTML = `
      <section class="py-20 px-4" id="timeline-section">
        <div class="max-w-6xl mx-auto">
          <div class="text-center mb-20">
            <div class="inline-flex items-center gap-2 glass-card px-6 py-3 text-sm font-medium text-slate-300 mb-8">
              <div class="w-2 h-2 rounded-full bg-green-400 animate-pulse"></div>
              Your Personalized Journey
            </div>
            <h2 class="text-4xl md:text-5xl lg:text-6xl font-display font-bold mb-6">
              ${itinerary.title}
            </h2>
            <p class="text-xl text-slate-400 max-w-3xl mx-auto">
              Curado con datos reales de APIs culturales para una experiencia aut√©ntica.
            </p>
          </div>
          ${generateTimelineHTML(itinerary.experiences)}
        </div>
      </section>`;
      
    // Animar la aparici√≥n
    setTimeout(() => {
      document.getElementById('timeline-section').scrollIntoView({ 
        behavior: 'smooth', 
        block: 'start' 
      });
    }, 500);
  }
  
  function generateTimelineHTML(experiences) {
    if (!experiences || experiences.length === 0) {
      return '<div class="text-center text-slate-400">No hay experiencias disponibles.</div>';
    }
    
    const colors = ['terracotta', 'sage', 'gold'];
    const emojis = ['‚òÄÔ∏è', 'üìñ', 'üç∑', 'üé≠', 'üé®'];
    
    return `
      <div class="relative">
        <div class="relative z-10 space-y-32">
          ${experiences.map((exp, index) => {
            const isEven = index % 2 === 0;
            const color = colors[index % colors.length];
            const emoji = emojis[index % emojis.length];
            
            return `
              <div class="timeline-item revealed lg:grid lg:grid-cols-2 lg:gap-16 items-center">
                <div class="${isEven ? 'text-left' : 'lg:order-1 text-left lg:text-right'}">
                  <div class="flex items-center gap-4 mb-6 ${isEven ? '' : 'lg:justify-end'}">
                    <div class="${isEven ? '' : 'lg:order-2'}">
                      <p class="text-sm font-medium text-slate-400 uppercase tracking-wide">${exp.time}</p>
                      <h3 class="text-3xl md:text-4xl font-display font-bold text-white">${exp.title}</h3>
                    </div>
                    <div class="w-16 h-16 rounded-2xl flex items-center justify-center ${isEven ? '' : 'lg:order-1'}" 
                         style="background: linear-gradient(135deg, var(--accent-${color}), var(--accent-sage));">
                      <span class="text-3xl">${emoji}</span>
                    </div>
                  </div>
                  <p class="text-lg md:text-xl text-slate-400 leading-relaxed mb-6">
                    ${exp.description}
                  </p>
                  <div class="flex items-center gap-4 text-sm ${isEven ? '' : 'lg:justify-end'}">
                    <div class="flex items-center gap-2 text-slate-300">
                      <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                      </svg>
                      ${exp.duration}
                    </div>
                    <div class="flex items-center gap-2 text-slate-300">
                      <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                      </svg>
                      ${exp.area}
                    </div>
                  </div>
                </div>
                <div class="mt-12 lg:mt-0 ${isEven ? '' : 'lg:order-2'}">
                  <div class="glass-card p-6 hover:scale-[1.02] transition-all duration-500">
                    <div class="relative overflow-hidden rounded-2xl mb-6">
                      <img src="${exp.image}" alt="${exp.location}" class="w-full h-56 object-cover">
                      <div class="absolute top-4 right-4">
                        <div class="glass-card px-3 py-1 text-xs font-semibold border-0">
                          <div class="flex items-center gap-1">
                            <div class="w-2 h-2 rounded-full bg-green-400"></div>
                            API Match
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <div class="flex items-start justify-between mb-4">
                      <h4 class="text-2xl font-bold text-white">${exp.location}</h4>
                    </div>

                    <div class="glass-card bg-black/30 p-4 rounded-xl mb-6 border-0">
                      <div class="flex items-center gap-2 mb-2">
                        <svg class="w-4 h-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" style="color: var(--accent-${color});">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                        </svg>
                        <p class="font-semibold text-sm" style="color: var(--accent-sand);">API SOURCE:</p>
                      </div>
                      <p class="text-slate-300 text-sm leading-relaxed">
                        Curado usando datos reales de Qloo Cultural API y Google Places.
                      </p>
                    </div>

                    <div class="flex items-center justify-between mb-4">
                      <div class="text-xs text-slate-400">Vibe Match: ${exp.vibe_match}%</div>
                    </div>
                    
                    <div class="w-full bg-white/10 rounded-full h-2 mb-4">
                      <div class="vibe-match-bar" style="width: ${exp.vibe_match}%;"></div>
                    </div>
                  </div>
                </div>
              </div>`;
          }).join('')}
        </div>
      </div>
      
      <!-- Journey Summary & Actions -->
      <section class="py-20 px-4">
        <div class="max-w-4xl mx-auto text-center">
          <div class="glass-card glass-strong p-10">
            <h3 class="text-4xl md:text-5xl font-display font-bold mb-6">
              Your cultural story powered by real APIs
            </h3>
            <p class="text-xl text-slate-400 mb-12 max-w-2xl mx-auto">
              Each experience has been curated using real cultural data from Qloo and Google Places APIs.
            </p>
            <div class="flex flex-wrap justify-center gap-6">
              <a href="/itineraries/${itinerary.id}" class="font-bold py-4 px-8 rounded-xl transition-all duration-300 text-lg transform hover:scale-105" style="background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage)); color: white;">
                üíæ View Full Itinerary
              </a>
              <button class="glass-card px-8 py-4 rounded-xl font-semibold text-white hover:bg-white/20 transition-all duration-300 text-lg border-0">
                üîó Share Adventure
              </button>
              <a href="/itineraries/new" class="glass-card px-8 py-4 rounded-xl font-semibold text-white hover:bg-white/20 transition-all duration-300 text-lg border-0">
                üé≠ Create Another
              </a>
            </div>
          </div>
        </div>
      </section>`;
  }
  
  function showError(message) {
    document.getElementById('processing-section').outerHTML = `
      <section class="py-20 px-4 min-h-screen flex items-center justify-center">
        <div class="max-w-4xl mx-auto text-center">
          <div class="glass-card glass-strong p-10">
            <h3 class="text-3xl font-bold text-white mb-4">üòï Algo sali√≥ mal</h3>
            <p class="text-xl text-slate-400 mb-8">${message}</p>
            <a href="/itineraries/new" class="font-bold py-4 px-8 rounded-xl transition-all duration-300 text-lg" style="background: linear-gradient(135deg, var(--accent-terracotta), var(--accent-sage)); color: white;">
              Intentar de nuevo
            </a>
          </div>
        </div>
      </section>`;
  }
  
  // Iniciar polling cada 2 segundos
  pollInterval = setInterval(pollStatus, 2000);
  
  // Primera consulta inmediata
  pollStatus();
});
</script>

<style>
@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.thinking-animation {
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 0.6; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.05); }
}

.vibe-match-bar {
  background: linear-gradient(90deg, var(--accent-terracotta), var(--accent-gold));
  border-radius: 9999px;
  height: 4px;
  position: relative;
  overflow: hidden;
  transition: width 0.5s ease-out;
}

.vibe-match-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
  animation: shine 2s ease-in-out infinite;
}

@keyframes shine {
  0% { left: -100%; }
  50% { left: 100%; }
  100% { left: 100%; }
}

.timeline-item {
  opacity: 0;
  transform: translateY(40px);
  animation: fadeInUp 0.8s ease-out forwards;
}

@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(40px); }
  to { opacity: 1; transform: translateY(0); }
}

.timeline-item.revealed {
  opacity: 1;
  transform: translateY(0);
}
</style>